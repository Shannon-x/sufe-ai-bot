version: '3.8'

# 使用外部Redis的Docker Compose配置
# 使用方法: docker-compose -f docker-compose.external-redis.yml up -d

services:
  bot:
    build: .
    image: cf-ai-tgbot-go:latest
    container_name: cf-ai-tgbot-go
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_GATEWAY_NAME=${CLOUDFLARE_GATEWAY_NAME}
      # 外部Redis配置
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
    volumes:
      - ./configs:/configs
      - ./logs:/var/log/cf-ai-tgbot
    ports:
      - "9090:9090"  # Metrics port
    # 如果外部Redis在Docker网络中，可以添加external_links
    # external_links:
    #   - redis_container_name:redis

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: cf-ai-tgbot-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: cf-ai-tgbot-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"

volumes:
  prometheus-data:
  grafana-data: